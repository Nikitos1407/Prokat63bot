require('dotenv').config();
const { Telegraf, Markup, session } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);
const ownerId = process.env.OWNER_ID;
const rentalState = new Map();

bot.use(session());

// üß∞ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
const tools = [
  {
    id: 'perforator',
    name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä Makita –†–ö2470',
    price: 1400,
    deposit: 5000,
    description: '–ú–æ—â–Ω—ã–π –∏ –Ω–∞–¥—ë–∂–Ω—ã–π –ø–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –±—É—Ä–µ–Ω–∏—è –±–µ—Ç–æ–Ω–∞, –∫–∏—Ä–ø–∏—á–∞ –∏ –ø—Ä–æ—á–∏—Ö —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/molotok-original1.jpg'
  },
  {
    id: 'vibro',
    name: '–í–∏–±—Ä–æ–ø–ª–∏—Ç–∞ Champion PC9045F',
    price: 1800,
    deposit: 5000,
    description: '–ë–µ–Ω–∑–∏–Ω–æ–≤–∞—è –≤–∏–±—Ä–æ–ø–ª–∏—Ç–∞ 4.8 –∫–í—Ç –¥–ª—è —É–ø–ª–æ—Ç–Ω–µ–Ω–∏—è –≥—Ä—É–Ω—Ç–∞, —Ç—Ä–æ—Ç—É–∞—Ä–Ω–æ–π –ø–ª–∏—Ç–∫–∏, —â–µ–±–Ω—è.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/vibroplate-original1.jpg'
  },
  {
    id: 'mixer',
    name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∏–∫—Å–µ—Ä –†–µ—Å–∞–Ω—Ç–∞ –°–ú-1600–≠-2',
    price: 850,
    deposit: 3000,
    description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–º–µ—Å–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–º–µ—Å–µ–π. –£–¥–æ–±–Ω–∞—è –¥–≤—É—Ö—Å–∫–æ—Ä–æ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/mikser-original1.jpg'
  }
];

// üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenu = Markup.keyboard([
  ['üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', 'üì¶ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å'],
  ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', 'üí¨ –û—Ç–∑—ã–≤—ã'],
  ['‚öôÔ∏è –û –Ω–∞—Å']
]).resize();

// /start
bot.start(async (ctx) => {
  const welcome = `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ü–†–û–ö–ê–¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ 63*!

üìç *–ì–∞—Ä–∞–∂–Ω—ã–π –±–æ–∫—Å (–ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫)*
üïò –†–∞–±–æ—Ç–∞–µ–º —Å 9:00 –¥–æ 21:00
üíµ –û–ø–ª–∞—Ç–∞: –Ω–∞–ª–∏—á–Ω—ã–µ / –ø–µ—Ä–µ–≤–æ–¥

–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /menu`;

  await ctx.replyWithPhoto(
    { url: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/logo.png' },
    {
      caption: welcome,
      parse_mode: 'Markdown',
      ...mainMenu
    }
  );
});

// /menu
bot.command('menu', async (ctx) => {
  await ctx.reply('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', mainMenu);
});

// üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
bot.hears('üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', async (ctx) => {
  const buttons = tools.map(tool => [Markup.button.callback(`${tool.name} ‚Äî ${tool.price}‚ÇΩ`, tool.id)]);
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:', Markup.inlineKeyboard(buttons));
});

// üì¶ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å
bot.hears('üì¶ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', async (ctx) => {
  await ctx.reply(`1. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.
2. –ù–∞–∂–º–∏—Ç–µ "–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å".
3. –£–∫–∞–∂–∏—Ç–µ –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –¥–∞—Ç—ã –∞—Ä–µ–Ω–¥—ã.
4. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –∑–∞–∫–∞–∑.`);
});

// üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã
bot.hears('üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', (ctx) => {
  ctx.reply(`üì± Telegram: @ProkatinstrumentaNSK\nüìç –ê–¥—Ä–µ—Å: –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫, –≥–∞—Ä–∞–∂–Ω—ã–π –±–æ–∫—Å\nüïò 9:00‚Äì21:00`);
});

// üí¨ –û—Ç–∑—ã–≤—ã
bot.hears('üí¨ –û—Ç–∑—ã–≤—ã', (ctx) => {
  ctx.reply('üí¨ –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–µ–º—É –æ—Ç–∑—ã–≤—É! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∑–¥–µ—Å—å, –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–µ–º.');
});

// ‚öôÔ∏è –û –Ω–∞—Å
bot.hears('‚öôÔ∏è –û –Ω–∞—Å', (ctx) => {
  ctx.reply(`–ü—Ä–æ–∫–∞—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤ –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫–µ.
‚úÖ –ù–∞–¥—ë–∂–Ω–æ
‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ
‚úÖ –£–¥–æ–±–Ω–æ`);
});

// –ò–Ω—Ñ–æ –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ + –∫–Ω–æ–ø–∫–∞ "–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å"
tools.forEach(tool => {
  bot.action(tool.id, async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.replyWithPhoto(tool.photo, {
      caption: `üõ† *${tool.name}*\n\n${tool.description}\n\nüí∞ *–¶–µ–Ω–∞:* ${tool.price} ‚ÇΩ / —Å—É—Ç–∫–∏\nüîê *–ó–∞–ª–æ–≥:* ${tool.deposit} ‚ÇΩ`,
      parse_mode: 'Markdown',
      reply_markup: Markup.inlineKeyboard([
        [Markup.button.callback('üëâ –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', `rent_${tool.id}`)],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'back_to_menu')]
      ])
    });
  });

  bot.action(`rent_${tool.id}`, async (ctx) => {
    const chatId = ctx.chat.id;
    rentalState.set(chatId, { tool });
    await ctx.reply('üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:');
  });
});

// –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
bot.action('back_to_menu', async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.reply('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', mainMenu);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—à–∞–≥–æ–≤–æ–π –∞—Ä–µ–Ω–¥—ã
bot.on('text', async (ctx) => {
  const chatId = ctx.chat.id;
  const state = rentalState.get(chatId);
  if (!state) return;

  if (!state.name) {
    state.name = ctx.message.text;
    return ctx.reply('üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):');
  }

  if (!state.phone) {
    const phone = ctx.message.text.replace(/\D/g, '');
    if (phone.length < 10 || phone.length > 15) {
      return ctx.reply('‚ùó –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤):');
    }
    state.phone = phone;
    return ctx.reply('üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì):');
  }

  if (!state.startDate) {
    if (!/^\d{2}\.\d{2}\.\d{4}$/.test(ctx.message.text)) {
      return ctx.reply('‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:');
    }
    state.startDate = ctx.message.text;
    return ctx.reply('üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ –∞—Ä–µ–Ω–¥—ã (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì):');
  }

  if (!state.endDate) {
    if (!/^\d{2}\.\d{2}\.\d{4}$/.test(ctx.message.text)) {
      return ctx.reply('‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ –∞—Ä–µ–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:');
    }
    state.endDate = ctx.message.text;

    const confirm = `üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:

üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${state.tool.name}
üë§ –ò–º—è: ${state.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${state.phone}
üìÖ –ù–∞—á–∞–ª–æ: ${state.startDate}
üìÖ –ö–æ–Ω–µ—Ü: ${state.endDate}

–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑? (–¥–∞ / –Ω–µ—Ç)`;

    return ctx.reply(confirm);
  }

  if (!state.confirmed) {
    const answer = ctx.message.text.toLowerCase();
    if (answer === '–¥–∞') {
      const msg = `üì• –ó–∞—è–≤–∫–∞:\n\nüîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${state.tool.name}\nüë§ –ò–º—è: ${state.name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${state.phone}\nüìÖ –°—Ä–æ–∫: ${state.startDate} ‚Äî ${state.endDate}`;
      await ctx.telegram.sendMessage(ownerId, msg);
      await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å. –û—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è! üåû');
    } else {
      await ctx.reply('‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    }
    rentalState.delete(chatId);
  }
});

bot.launch();
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
