require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');
const { google } = require('googleapis');
const path = require('path');

// --- –õ–æ–≥–æ—Ç–∏–ø ---
const LOGO = 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/logo.png';

// --- Google Sheets –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ ---
const auth = new google.auth.GoogleAuth({
  keyFile: process.env.GOOGLE_KEY_PATH || path.join(__dirname, 'google-key.json'),
  scopes: [
    'https://www.googleapis.com/auth/spreadsheets',
    'https://www.googleapis.com/auth/calendar'
  ],
});
const SPREADSHEET_ID = process.env.SPREADSHEET_ID;
const sheetName = '–ó–∞—è–≤–∫–∏';

// --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ Google Sheets ---
async function appendOrderToSheet(data, tool) {
  const client = await auth.getClient();
  const sheets = google.sheets({ version: 'v4', auth: client });

  // –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ —É–∂–µ –µ—Å—Ç—å –Ω–∞ –ª–∏—Å—Ç–µ "–ó–∞—è–≤–∫–∏"
  const res = await sheets.spreadsheets.values.get({
    spreadsheetId: SPREADSHEET_ID,
    range: '–ó–∞—è–≤–∫–∏!A:A',
  });
  const rowCount = res.data.values ? res.data.values.length : 0;
  const nextId = `AR-${rowCount}`;

  // –§–æ—Ä–º–∏—Ä—É–µ–º values —Å—Ç—Ä–æ–≥–æ –ø–æ–¥ —Ç–≤–æ–∏ –Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã
  const values = [[
    nextId,            // A: ID –∑–∞–∫–∞–∑–∞
    data.name,         // B: –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞
    data.phone,        // C: –¢–µ–ª–µ—Ñ–æ–Ω
    '', '', '', '', '',// D-H: –ø—Ä–æ–ø—É—Å–∫
    tool.name,         // I: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
    data.dateStart,    // J: –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
    data.dateEnd,      // K: –î–∞—Ç–∞ –∫–æ–Ω—Ü–∞
    '',                // L: –°—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Å—É—Ç–∫–∏
    tool.deposit,      // M: –ó–∞–ª–æ–≥
    data.days,         // N: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
    data.sum           // O: –°—É–º–º–∞
  ]];

  await sheets.spreadsheets.values.append({
    spreadsheetId: SPREADSHEET_ID,
    range: '–ó–∞—è–≤–∫–∏!A1',
    valueInputOption: 'USER_ENTERED',
    resource: { values },
  });
}

// --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ Google –ö–∞–ª–µ–Ω–¥–∞—Ä—å ---
async function addOrderToCalendar(order, tool) {
  const client = await auth.getClient();
  const calendar = google.calendar({ version: 'v3', auth: client });

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ YYYY-MM-DD
  function formatDate(str) {
    const [d, m, y] = str.split('.');
    return `${y}-${m}-${d}`;
  }

  // –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è "–¥–æ" –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ:
  const [d, m, y] = order.dateEnd.split('.');
  const endDateObj = new Date(y, m - 1, +d + 1);
  const endDateStr = endDateObj.toISOString().slice(0, 10);

  const event = {
    summary: `–ê—Ä–µ–Ω–¥–∞: ${tool.name}`,
    description: `–ö–ª–∏–µ–Ω—Ç: ${order.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n–ü–µ—Ä–∏–æ–¥: ${order.dateStart} ‚Äî ${order.dateEnd}`,
    start: { date: formatDate(order.dateStart) },
    end: { date: endDateStr }, // Google Calendar –ù–ï –≤–∫–ª—é—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å, –ø–æ—ç—Ç–æ–º—É +1
  };

  try {
    await calendar.events.insert({
      calendarId: process.env.GOOGLE_CALENDAR_ID || 'primary', // <-- –≤–æ—Ç —Ç–∞–∫!
      resource: event,
    
    console.log('–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å!');
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å:', e.message);
  }
}

// --- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ---
const tools = [
  {
    id: 'otbmolot',
    name: '–û—Ç–±–æ–π–Ω—ã–π –º–æ–ª–æ—Ç–æ–∫ Makita HM 1213 C',
    desc: '–ú–æ—â–Ω—ã–π –æ—Ç–±–æ–π–Ω–∏–∫ –¥–ª—è –¥–µ–º–æ–Ω—Ç–∞–∂–∞.\n–ö–æ–º–ø–ª–µ–∫—Ç: –û—Ç–±–æ–π–Ω—ã–π –º–æ–ª–æ—Ç–æ–∫ ‚Äî 1 —à—Ç, –î–æ–ª–æ—Ç–æ –ø–∏–∫–æ–æ–±—Ä–∞–∑–Ω–æ–µ (L-300–º–º) ‚Äî 1 —à—Ç, –ó—É–±–∏–ª–æ –ª–æ–ø–∞—Ç–æ—á–Ω–æ–µ (75—Ö400–º–º) ‚Äî 1 —à—Ç, –ö–µ–π—Å ‚Äî 1 —à—Ç.',
    price: 1400, // –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º pricing
    deposit: 5000,
    images: ['https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/molotok-original1.jpg'],
    pricing: [
      { from: 1, to: 2, pricePerDay: 1400 },
      { from: 3, to: 6, pricePerDay: 1200 },   // –∑–∞ 3 –¥–Ω—è (—Å–∫–∏–¥–∫–∞)
      { from: 7, to: 30, pricePerDay: 1200 }    // –∑–∞ –Ω–µ–¥–µ–ª—é (–µ—â—ë –≤—ã–≥–æ–¥–Ω–µ–µ)
    ]
  },
  {
    id: 'vibro',
    name: '–í–∏–±—Ä–æ–ø–ª–∏—Ç–∞ Champion PC9045F',
    desc: '–î–ª—è —É–ø–ª–æ—Ç–Ω–µ–Ω–∏—è –≥—Ä—É–Ω—Ç–∞, –ø–ª–∏—Ç–∫–∏, —â–µ–±–Ω—è.',
    price: 1800,
    deposit: 5000,
    images: ['https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/vibro1.jpg'],
    pricing: [
      { from: 1, to: 2, pricePerDay: 1800 },
      { from: 3, to: 6, pricePerDay: 1700 },
      { from: 7, to: 30, pricePerDay: 1600 }
    ]
  },
  {
    id: 'motobur',
    name: '–ú–æ—Ç–æ–±—É—Ä Huter GGD-300 —Å –∫–æ–º–ø–ª–µ–∫—Ç–æ–º',
    desc: '–° —à–Ω–µ–∫–∞–º–∏ (100‚Äì250 –º–º), —É–¥–ª–∏–Ω–∏—Ç–µ–ª—å 1000 –º–º. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –±—É—Ä–µ–Ω–∏—è.\n–ö–æ–º–ø–ª–µ–∫—Ç: –ú–æ—Ç–æ–±—É—Ä ‚Äî 1 —à—Ç, –®–Ω–µ–∫ (100/150/200/250 –º–º) ‚Äî 1 —à—Ç –Ω–∞ –≤—ã–±–æ—Ä, –£–¥–ª–∏–Ω–∏—Ç–µ–ª—å ‚Äî 1 —à—Ç.',
    price: 1300,
    deposit: 5000,
    images: ['https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/motobur1.jpg'],
    pricing: [
      { from: 1, to: 2, pricePerDay: 1300 },
      { from: 3, to: 6, pricePerDay: 1200 },
      { from: 7, to: 30, pricePerDay: 1000 }
    ]
  },
  {
    id: 'trimmer',
    name: '–ú–æ—Ç–æ–∫–æ—Å–∞ Champion',
    desc: '–ë–µ–Ω–∑–∏–Ω–æ–≤—ã–π —Ç—Ä–∏–º–º–µ—Ä –¥–ª—è –ø–æ–∫–æ—Å–∞ —Ç—Ä–∞–≤—ã –∏ –∫—É—Å—Ç–∞—Ä–Ω–∏–∫–æ–≤.\n–ö–æ–º–ø–ª–µ–∫—Ç: –¢—Ä–∏–º–º–µ—Ä ‚Äî 1 —à—Ç, (–î–∏—Å–∫ –∏–ª–∏ –∫–∞—Ç—É—à–∫–∞) ‚Äî 1 —à—Ç –Ω–∞ –≤—ã–±–æ—Ä.',
    price: 1300,
    deposit: 3000,
    images: ['https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/motokosa1.jpg'],
    pricing: [
      { from: 1, to: 2, pricePerDay: 1300 },
      { from: 3, to: 6, pricePerDay: 900 },
      { from: 7, to: 30, pricePerDay: 900 }
    ]
  },
  {
    id: 'mikser',
    name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∏–∫—Å–µ—Ä –†–µ—Å–∞–Ω—Ç–∞ –°–ú-1600–≠-2 75/20/1',
    desc: '–ù–∞–¥—ë–∂–Ω—ã–π –º–∏–∫—Å–µ—Ä –¥–ª—è —Ä–∞—Å—Ç–≤–æ—Ä–æ–≤.\n–¢–∏–ø –ø–∞—Ç—Ä–æ–Ω–∞: –ú14, —Ä–µ–∑—å–±–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.\n–ö–æ–º–ø–ª–µ–∫—Ç: –ù–∞—Å–∞–¥–∫–∞ ‚Äî 1 —à—Ç, –ö–ª—é—á ‚Äî 2 —à—Ç.',
    price: 850,
    deposit: 2000,
    images: ['https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/mikser-original1.jpg'],
    pricing: [
      { from: 1, to: 2, pricePerDay: 850 },
      { from: 3, to: 6, pricePerDay: 700 },
      { from: 7, to: 30, pricePerDay: 700 }
    ]
  }
];

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—É–º–º—ã –∞—Ä–µ–Ω–¥—ã —Å —É—á–µ—Ç–æ–º —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ ---
function calcToolPrice(toolId, daysCount) {
  const tool = tools.find(t => t.id === toolId);
  if (!tool || !tool.pricing) return null;
  // –ò—â–µ–º –Ω—É–∂–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
  const tariff = tool.pricing.find(t =>
    daysCount >= t.from && daysCount <= t.to
  );
  if (!tariff) return null;
  return daysCount * tariff.pricePerDay;
}

// --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
const mainMenu = Markup.keyboard([
  ['üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', 'üì¶ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å'],
  ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', 'üìç –ì–¥–µ –∑–∞–±—Ä–∞—Ç—å?'],
  ['üí¨ –û—Ç–∑—ã–≤—ã', '‚öôÔ∏è –û –Ω–∞—Å'],
]).resize();

// --- Telegraf bot ---
const bot = new Telegraf(process.env.BOT_TOKEN);
// --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏ —Å –æ—Ü–µ–Ω–∫–æ–π ---
const reviewMode = {}; // { userId: { step, score } }
// --- –ú–∞—Å—Å–∏–≤ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –æ—Ç–∑—ã–≤–æ–≤ —Å –ê–≤–∏—Ç–æ ---
const avitoScreens = [
  'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/otzv1.jpg',
  'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/otzv2.jpg',
  'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/otzv3.jpg',
  'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/otzv4.jpg',
  'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/otzv5.jpg',
  'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/otzv6.jpg',
  'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/otzv7.jpg'
];
const avitoSliderState = {}; // <------ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!
async function sendAvitoScreen(ctx, index) {
  const total = avitoScreens.length;
  const url = avitoScreens[index];
  let caption = `–û—Ç–∑—ã–≤—ã —Å –ê–≤–∏—Ç–æ (${index + 1}/${total})\nhttps://www.avito.ru/user/YOUR_ID/feedbacks`;

  const buttons = [];
  if (index > 0) buttons.push(Markup.button.callback('‚Üê –ù–∞–∑–∞–¥', 'avito_prev'));
  if (index < total - 1) buttons.push(Markup.button.callback('–í–ø–µ—Ä—ë–¥ ‚Üí', 'avito_next'));
  buttons.push(Markup.button.callback('üè† –ú–µ–Ω—é', 'menu'));

  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Ñ–æ—Ç–æ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ (—á–∏—Å—Ç–æ, –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è)
  if (ctx.updateType === 'callback_query' && ctx.callbackQuery.message && ctx.callbackQuery.message.message_id) {
    try { await ctx.deleteMessage(); } catch(e){}
  }

  await ctx.replyWithPhoto({ url }, {
    caption,
    ...Markup.inlineKeyboard([buttons]),
  });
}
// –ö–Ω–æ–ø–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ –æ—Ç–∑—ã–≤–æ–≤
bot.hears('üí¨ –û—Ç–∑—ã–≤—ã', async (ctx) => {
  await ctx.reply(
    '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:',
    Markup.inlineKeyboard([
      [Markup.button.callback('üìù –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤', 'show_reviews')],
      [Markup.button.callback('üñºÔ∏è –û—Ç–∑—ã–≤—ã —Å –ê–≤–∏—Ç–æ', 'avito_reviews')],
      [Markup.button.callback('–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', 'write_review')],
      [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
    ])
  );
});

// –ö–Ω–æ–ø–∫–∞ "–û—Ç–∑—ã–≤—ã —Å –ê–≤–∏—Ç–æ"
bot.action('avito_reviews', async (ctx) => {
  avitoSliderState[ctx.from.id] = 0;
  const idx = 0;
  await ctx.replyWithPhoto(
    { url: avitoScreens[idx] },
    {
      caption: `–û—Ç–∑—ã–≤—ã —Å –ê–≤–∏—Ç–æ (${idx + 1}/${avitoScreens.length})`,
      ...Markup.inlineKeyboard([
        [
          ...(avitoScreens.length > 1 ? [Markup.button.callback('‚ñ∂Ô∏è –°–ª–µ–¥', 'avito_next')] : []),
        ],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
      ])
    }
  );
  try { await ctx.answerCbQuery(); } catch(e) {}
});

// –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∏–π"
bot.action('avito_next', async (ctx) => {
  let idx = avitoSliderState[ctx.from.id] ?? 0;
  idx = (idx + 1) % avitoScreens.length;
  avitoSliderState[ctx.from.id] = idx;
  await ctx.replyWithPhoto(
    { url: avitoScreens[idx] },
    {
      caption: `–û—Ç–∑—ã–≤—ã —Å –ê–≤–∏—Ç–æ (${idx + 1}/${avitoScreens.length})`,
      ...Markup.inlineKeyboard([
        [
          Markup.button.callback('‚óÄÔ∏è –ü—Ä–µ–¥', 'avito_prev'),
          Markup.button.callback('‚ñ∂Ô∏è –°–ª–µ–¥', 'avito_next'),
        ],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
      ])
    }
  );
  try { await ctx.answerCbQuery(); } catch(e) {}
});

// –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∏–π"
bot.action('avito_prev', async (ctx) => {
  let idx = avitoSliderState[ctx.from.id] ?? 0;
  idx = (idx - 1 + avitoScreens.length) % avitoScreens.length;
  avitoSliderState[ctx.from.id] = idx;
  await ctx.replyWithPhoto(
    { url: avitoScreens[idx] },
    {
      caption: `–û—Ç–∑—ã–≤—ã —Å –ê–≤–∏—Ç–æ (${idx + 1}/${avitoScreens.length})`,
      ...Markup.inlineKeyboard([
        [
          Markup.button.callback('‚óÄÔ∏è –ü—Ä–µ–¥', 'avito_prev'),
          Markup.button.callback('‚ñ∂Ô∏è –°–ª–µ–¥', 'avito_next'),
        ],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
      ])
    }
  );
  try { await ctx.answerCbQuery(); } catch(e) {}
});

// --- –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—Ç–∑—ã–≤—ã –∏–∑ Google Sheets + —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ ---
bot.action('show_reviews', async (ctx) => {
  try {
    const client = await auth.getClient();
    const sheets = google.sheets({ version: 'v4', auth: client });
    const res = await sheets.spreadsheets.values.get({
      spreadsheetId: SPREADSHEET_ID,
      range: '–û—Ç–∑—ã–≤—ã!A2:D',
    });
    const allReviews = res.data.values || [];
    if (allReviews.length === 0) {
      await ctx.reply('–ü–æ–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ—Ç. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!');
    } else {
      // –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞
      const starsArr = allReviews.map(r => Number(r[3])).filter(Boolean);
      const avgScore = starsArr.length ? (starsArr.reduce((a, b) => a + b, 0) / starsArr.length).toFixed(1) : '‚Äî';
      const reviewsToShow = allReviews.slice(-5).reverse();
      let msg = `‚≠êÔ∏è –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: <b>${avgScore}</b>/5\n\nüìù <b>–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤:</b>\n\n`;
      reviewsToShow.forEach(([username, review, date, score]) => {
        const stars = score ? '‚òÖ'.repeat(Number(score)) + '‚òÜ'.repeat(5 - Number(score)) : '';
        msg += `${stars}\n<i>${username || '–ì–æ—Å—Ç—å'}</i> (${date || '-'})\n‚Äú${review}‚Äù\n\n`;
      });
      await ctx.reply(msg, { parse_mode: 'HTML' });
    }
  } catch (e) {
    await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
  await ctx.answerCbQuery();
});

// --- –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤: —Å–Ω–∞—á–∞–ª–∞ –æ—Ü–µ–Ω–∫–∞, –ø–æ—Ç–æ–º —Ç–µ–∫—Å—Ç ---
bot.action('write_review', async (ctx) => {
  reviewMode[ctx.from.id] = { step: 0 };
  await ctx.reply('–ü–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É –æ—Ç 1 –¥–æ 5 (–≥–¥–µ 5 ‚Äî –æ—Ç–ª–∏—á–Ω–æ):',
    Markup.inlineKeyboard([
      [Markup.button.callback('‚≠êÔ∏è 1', 'rate_1'), Markup.button.callback('‚≠êÔ∏è 2', 'rate_2'), Markup.button.callback('‚≠êÔ∏è 3', 'rate_3'), Markup.button.callback('‚≠êÔ∏è 4', 'rate_4'), Markup.button.callback('‚≠êÔ∏è 5', 'rate_5')]
    ])
  );
  await ctx.answerCbQuery();
});

['1','2','3','4','5'].forEach(n => {
  bot.action(`rate_${n}`, async (ctx) => {
    reviewMode[ctx.from.id] = { step: 1, score: Number(n) };
    await ctx.reply('‚úçÔ∏è –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ —Ç–µ–∫—Å—Ç–æ–º:');
    await ctx.answerCbQuery();
  });
});

// --- –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ç–µ–∫—Å—Ç ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ —Å –æ—Ü–µ–Ω–∫–æ–π ---
bot.on('text', async (ctx, next) => {
  const state = reviewMode[ctx.from.id];
  if (state && state.step === 1) {
    const review = ctx.message.text;
    const username = ctx.from.username ? '@' + ctx.from.username : '';
    const date = new Date().toLocaleString('ru-RU');
    const score = state.score;
    try {
      await appendReviewToSheet({ username, review, date, score });
      await ctx.reply('üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤ –∏ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! –í–∞—à –æ—Ç–∑—ã–≤ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è –≤ –ª–µ–Ω—Ç–µ.');
    } catch (e) {
      await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
    }
    delete reviewMode[ctx.from.id];
    return;
  }
  return next();
});

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –≤ Google Sheets ---
async function appendReviewToSheet({ username, review, date, score }) {
  const client = await auth.getClient();
  const sheets = google.sheets({ version: 'v4', auth: client });
  const values = [[username, review, date, score]];
  await sheets.spreadsheets.values.append({
    spreadsheetId: SPREADSHEET_ID,
    range: '–û—Ç–∑—ã–≤—ã!A1',
    valueInputOption: 'USER_ENTERED',
    resource: { values },
  });
}
// /start
bot.start((ctx) => {
  ctx.replyWithPhoto(
    { url: LOGO },
    {
      caption: 'üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Prokat63!</b>\n\n' +
        'üîß –¢—É—Ç –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞, —Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–∞—á–∏ ‚Äî –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç.\n' +
        '–û—Ç–±–æ–π–Ω–∏–∫, —Ç—Ä–∏–º–º–µ—Ä, –º–æ—Ç–æ–±—É—Ä, –º–∏–∫—Å–µ—Ä, –ø–∏–ª–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ, –∏ –º—ã –≤—Å—ë –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º!\n\n' +
        'üöÄ –ë—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –±–µ–∑ –≥–æ–ª–æ–≤–Ω–æ–π –±–æ–ª–∏:\n' +
        '‚Ä¢ –°–∞–º–æ–≤—ã–≤–æ–∑ –≤ –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫–µ\n' +
        '‚Ä¢ –ù–∞–¥—ë–∂–Ω—ã–π –∏ –æ–±—Å–ª—É–∂–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç\n' +
        '‚Ä¢ –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∞—Ä–µ–Ω–¥—ã ‚Äî –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ\n\n' +
        'üí¨ –ù–∞–∂–º–∏—Ç–µ üè† –ú–µ–Ω—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å ‚Äî –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç!\n\n' +
        '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      parse_mode: 'HTML',
      ...mainMenu,
    }
  );
});

// /menu
bot.command('menu', (ctx) =>
  ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu)
);

// --- –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ ---
bot.hears('üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', async (ctx) => {
  const buttons = tools.map(tool => [
    Markup.button.callback(`${tool.name} ‚Äî ${tool.price}‚ÇΩ`, `show_${tool.id}`)
  ]);
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:', Markup.inlineKeyboard(buttons));
});

// --- –î–µ—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ ---
bot.action(/^show_(.+)$/, async (ctx) => {
  const toolId = ctx.match[1];
  const tool = tools.find(t => t.id === toolId);
  if (!tool) return ctx.reply('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞.');
  await ctx.replyWithPhoto(
    { url: tool.images[0] },
    {
      caption:
        `üîß <b>${tool.name}</b>\n${tool.desc}\n\n` +
        `üí∞ <b>–¶–µ–Ω–∞:</b> ${tool.price}‚ÇΩ/—Å—É—Ç–∫–∏\n` +
        `üí≥ <b>–ó–∞–ª–æ–≥:</b> ${tool.deposit}‚ÇΩ\n`,
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('üìù –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', `rent_${tool.id}`)],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
      ]),
    }
  );
  await ctx.answerCbQuery();
});

// --- –ü–æ—à–∞–≥–æ–≤–∞—è –∞—Ä–µ–Ω–¥–∞ ---
const RENT_STEPS = [
  '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è',
  '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä 8XXXXXXXXXX)',
  '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã (–î–î.–ú–ú.–ì–ì–ì–ì)',
  '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—Ä–µ–Ω–¥—ã (–î–î.–ú–ú.–ì–ì–ì–ì)',
];

const rentData = {}; // { userId: { step, data, toolId } }
// --- –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫ –¥–ª—è –ü–æ–≤—Ç–æ—Ä–∞ ---
const rentHistory = {}; // { userId: [ –∑–∞—è–≤–∫–∏... ] }

// --- –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ ---
function sleep(ms) { return new Promise(res => setTimeout(res, ms)); }
async function typingAndReply(ctx, text, extra = {}) {
  await ctx.replyWithChatAction('typing');
  await sleep(450);
  await ctx.reply(text, extra);
}

bot.action(/^rent_(.+)$/, async (ctx) => {
  const toolId = ctx.match[1];
  rentData[ctx.from.id] = { step: 0, data: {}, toolId };
  await ctx.reply(`<b>–®–∞–≥ 1 –∏–∑ 4</b>\n${RENT_STEPS[0]}`, {
    parse_mode: 'HTML',
    ...Markup.keyboard([['üè† –ú–µ–Ω—é']]).resize(),
  });
  await ctx.answerCbQuery();
});

bot.on('text', async (ctx, next) => {
  const state = rentData[ctx.from.id];
  if (!state) return next();

  if (ctx.message.text === 'üè† –ú–µ–Ω—é') {
    delete rentData[ctx.from.id];
    return ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
  }

  const { step, data, toolId } = state;
  const tool = tools.find((t) => t.id === toolId);

  switch (step) {
    case 0:
      if (ctx.message.text.length < 2) return typingAndReply(ctx, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è.');
      data.name = ctx.message.text.trim();
      state.step++;
      await typingAndReply(ctx, '‚úÖ –ò–º—è –ø—Ä–∏–Ω—è—Ç–æ!');
      await typingAndReply(ctx, `<b>–®–∞–≥ 2 –∏–∑ 4</b>\n${RENT_STEPS[1]}`, { parse_mode: 'HTML' });
      break;
    case 1:
      if (!/^8\d{10}$/.test(ctx.message.text)) {
        return typingAndReply(ctx, '–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 11 —Ü–∏—Ñ—Ä –∏ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 8. –ü—Ä–∏–º–µ—Ä: 89291234567');
      }
      data.phone = ctx.message.text;
      state.step++;
      await typingAndReply(ctx, '‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω –ø—Ä–∏–Ω—è—Ç!');
      await typingAndReply(ctx, `<b>–®–∞–≥ 3 –∏–∑ 4</b>\n${RENT_STEPS[2]}`, { parse_mode: 'HTML' });
      break;
    case 2:
      if (!/^\d{2}\.\d{2}\.\d{4}$/.test(ctx.message.text)) return typingAndReply(ctx, '–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì');
      data.dateStart = ctx.message.text;
      state.step++;
      await typingAndReply(ctx, 'üìÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞!');
      await typingAndReply(ctx, `<b>–®–∞–≥ 4 –∏–∑ 4</b>\n${RENT_STEPS[3]}`, { parse_mode: 'HTML' });
      break;
    case 3:
  if (!/^\d{2}\.\d{2}\.\d{4}$/.test(ctx.message.text)) return typingAndReply(ctx, '–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì');
  data.dateEnd = ctx.message.text;
  const days = 1 + calcDays(data.dateStart, data.dateEnd);
  if (days < 1) return typingAndReply(ctx, '–ê—Ä–µ–Ω–¥–∞ –º–∏–Ω–∏–º—É–º –Ω–∞ 1 —Å—É—Ç–∫–∏! –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞.');
  if (days > 30) return typingAndReply(ctx, '–ê—Ä–µ–Ω–¥–∞ –Ω–µ –±–æ–ª—å—à–µ 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥.');

  // --- –í–æ—Ç —Ç—É—Ç –Ω–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç ---
  const rentSum = calcToolPrice(tool.id, days);
  const sum = rentSum + tool.deposit;
  state.data = { ...data, days, sum, rentSum }; // rentSum –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

  // –ö—Ä–∞—Å–∏–≤–∞—è –∑–∞—è–≤–∫–∞
  const text =
    `<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞—è–≤–∫—É:</b>\n\n` +
    `üîß <b>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:</b> <i>${tool.name}</i>\n` +
    `üôç <b>–ò–º—è:</b> <i>${data.name}</i>\n` +
    `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <i>${data.phone}</i>\n` +
    `üìÖ <b>–°—Ä–æ–∫:</b> <i>${data.dateStart} ‚Äî ${data.dateEnd}</i>\n` +
    `üïí <b>–î–Ω–µ–π:</b> <i>${days}</i>\n\n` +
    `üí∞ <b>–ö –æ–ø–ª–∞—Ç–µ:</b> <b>${rentSum}‚ÇΩ + –∑–∞–ª–æ–≥ ${tool.deposit}‚ÇΩ = <u>${sum}‚ÇΩ</u></b>\n\n` +
    `–í—Å—ë –≤–µ—Ä–Ω–æ?`;
  await typingAndReply(ctx, text, {
    parse_mode: 'HTML',
    ...Markup.inlineKeyboard([
      [Markup.button.callback('‚úÖ –í—Å—ë –≤–µ—Ä–Ω–æ', 'confirm_rent')],
      [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'rent_back')],
      [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
    ]),
  });
  break;
  }
});

bot.action('rent_back', async (ctx) => {
  const state = rentData[ctx.from.id];
  if (!state) return ctx.answerCbQuery('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ñ–æ—Ä–º—ã.');
  if (state.step > 0) state.step--;
  await ctx.reply(`<b>–®–∞–≥ ${state.step + 1} –∏–∑ 4</b>\n${RENT_STEPS[state.step]}`, { parse_mode: 'HTML' });
  await ctx.answerCbQuery();
});
bot.action('confirm_rent', async (ctx) => {
  const state = rentData[ctx.from.id];
  if (!state) return ctx.answerCbQuery('–§–æ—Ä–º–∞ —É—Å—Ç–∞—Ä–µ–ª–∞.');
  const { data, toolId } = state;
  const tool = tools.find((t) => t.id === toolId);

  try {
    await appendOrderToSheet({
      name: data.name,
      phone: data.phone,
      dateStart: data.dateStart,
      dateEnd: data.dateEnd,
      days: data.days,
      sum: data.sum
    }, tool);

    // --- –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å ---
    await addOrderToCalendar({
      name: data.name,
      phone: data.phone,
      dateStart: data.dateStart,
      dateEnd: data.dateEnd
    }, tool);

  } catch (e) {
    await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –∑–∞—è–≤–∫—É –≤ —Ç–∞–±–ª–∏—Ü—É –∏–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
  }

  // --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É ---
  const msg =
    `üìù <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>\n` +
    `üîß <b>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:</b> ${tool.name}\n` +
    `üôç <b>–ò–º—è:</b> ${data.name}\n` +
    `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${data.phone}\n` +
    `üìÖ <b>–°—Ä–æ–∫:</b> ${data.dateStart} ‚Äî ${data.dateEnd} (${data.days} –¥–Ω–µ–π)\n` +
    `üí∞ <b>–°—É–º–º–∞:</b> ${state.data.rentSum}‚ÇΩ + –∑–∞–ª–æ–≥ ${tool.deposit}‚ÇΩ = <b>${state.data.sum}‚ÇΩ</b>`;
  await ctx.telegram.sendMessage(process.env.OWNER_CHAT_ID, msg, { parse_mode: 'HTML' });

  await ctx.reply('üéØ <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n' +
    '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä!\n' +
    'üéâ–ö–æ–º–∞–Ω–¥–∞ Prokat63 —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–æ–º.\n' +
    '–ñ–¥–∏—Ç–µ –∑–≤–æ–Ω–∫–∞ –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ‚Äî —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –∞—Ä–µ–Ω–¥–∞ —Å—Ç–∞–Ω–µ—Ç –ø—Ä–æ—â–µ!\n' +
    '–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! ‚òÄÔ∏è.',
    {
      parse_mode: 'HTML',
      ...mainMenu
    }
  );
  delete rentData[ctx.from.id];
  await ctx.answerCbQuery();
});

bot.action('menu', async (ctx) => {
  delete rentData[ctx.from.id];
  await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
  await ctx.answerCbQuery();
});

// --- –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å ---
bot.hears('üì¶ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', (ctx) =>
  ctx.reply(
    'üõ† <b>–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç?</b>\n\n' +
    '1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ\n' +
    '2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ <b>–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å</b>\n' +
    '3Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É (–∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω, –¥–∞—Ç—ã)\n' +
    '4Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞.\n\n',
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', 'go_tools')],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
      ]),
    }
  )
);

// --- –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ ---
bot.hears('üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', (ctx) =>
  ctx.reply(
    'üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +7 929 569-69-90\n' +
    'üìç <b>–ê–¥—Ä–µ—Å:</b> –≥. –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫, –ì–∞—Ä–∞–∂–Ω—ã–π –±–æ–∫—Å\n' +
    'üåç <b>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</b> 53.100704, 49.966212\n' +
    'üïò 9:00‚Äì21:00\n' +
    'üíµ –û–ø–ª–∞—Ç–∞: –Ω–∞–ª–∏—á–Ω—ã–µ / –ø–µ—Ä–µ–≤–æ–¥',
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('üìç –ì–¥–µ –∑–∞–±—Ä–∞—Ç—å?', 'where_pickup')],
        [Markup.button.url('2–ì–ò–°', 'https://2gis.ru/novokujbyshevsk/firm/70000001103003351/49.966319%2C53.100478?m=49.96506%2C53.100221%2F18.65')],
        [Markup.button.url('–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã', 'https://yandex.ru/maps/?ll=49.966212%2C53.100704&z=17')],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
      ])
    }
  )
);

// --- –ì–¥–µ –∑–∞–±—Ä–∞—Ç—å ---
bot.hears('üìç –ì–¥–µ –∑–∞–±—Ä–∞—Ç—å?', async (ctx) => {
  await ctx.reply('–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏: –≥. –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫, –ì–∞—Ä–∞–∂–Ω—ã–π –±–æ–∫—Å\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: 53.100704, 49.966212');
  await ctx.replyWithLocation(53.100704, 49.966212);
  await ctx.reply(
    '–û—Ç–∫—Ä—ã—Ç—å –≤ 2–ì–ò–°: https://2gis.ru/novokujbyshevsk/firm/70000001103003351/49.966319%2C53.100478?m=49.96506%2C53.100221%2F18.65\n' +
    '–û—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö: https://yandex.ru/maps/?ll=49.966212%2C53.100704&z=17',
    Markup.inlineKeyboard([
      [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
    ])
  );
});

bot.action('where_pickup', async (ctx) => {
  await ctx.reply('–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏: –≥. –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫, –ì–∞—Ä–∞–∂–Ω—ã–π –±–æ–∫—Å\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: 53.100704, 49.966212');
  await ctx.replyWithLocation(53.100704, 49.966212);
  await ctx.reply(
    '–û—Ç–∫—Ä—ã—Ç—å –≤ 2–ì–ò–°: https://2gis.ru/novokujbyshevsk/firm/70000001103003351/49.966319%2C53.100478?m=49.96506%2C53.100221%2F18.65\n' +
    '–û—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö: https://yandex.ru/maps/?ll=49.966212%2C53.100704&z=17',
    Markup.inlineKeyboard([
      [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
    ])
  );
  await ctx.answerCbQuery();
});

// --- "–°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤" –∏–∑ "–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å" ---
bot.action('go_tools', async (ctx) => {
  const buttons = tools.map(tool => [
    Markup.button.callback(`${tool.name} ‚Äî ${tool.price}‚ÇΩ`, `show_${tool.id}`)
  ]);
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:', Markup.inlineKeyboard(buttons));
  await ctx.answerCbQuery();
});

// --- –û—Ç–∑—ã–≤—ã ---
bot.hears('üí¨ –û—Ç–∑—ã–≤—ã', (ctx) =>
  ctx.reply('–í–∞—à –æ—Ç–∑—ã–≤ –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω! –ù–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –ø—Ä—è–º–æ –≤ —á–∞—Ç.',
    Markup.inlineKeyboard([
      [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
    ])
  )
);

// --- –û –Ω–∞—Å ---
bot.hears('‚öôÔ∏è –û –Ω–∞—Å', (ctx) =>
  ctx.reply(
    '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Prokat63 ‚Äî —Å–µ—Ä–≤–∏—Å –∞—Ä–µ–Ω–¥—ã —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏ —Å–∞–¥–æ–≤–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤ –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫–µ.\n\n' +
    '–£ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –≤ –ø—Ä–æ–∫–∞—Ç –Ω–∞–¥—ë–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–µ ‚Äî –æ—Ç –ø–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä–∞ –∏ —Ç—Ä–∏–º–º–µ—Ä–∞ –¥–æ –≤–∏–±—Ä–æ–ø–ª–∏—Ç—ã –∏ –º–æ—Ç–æ–±—É—Ä–∞.\n\n' +
    '‚úÖ –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ\n' +
    '‚úÖ –ì–∏–±–∫–∏–µ —Å—Ä–æ–∫–∏ –∞—Ä–µ–Ω–¥—ã ‚Äî –æ—Ç 1 –¥–Ω—è\n' +
    '‚úÖ –£–¥–æ–±–Ω—ã–π —Å–∞–º–æ–≤—ã–≤–æ–∑\n' +
    '‚úÖ –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n' +
    '‚úÖ –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏ –∑–∞–ª–æ–≥\n\n' +
    'üéØ –ù–∞—à–∞ —Ü–µ–ª—å ‚Äî —Å–¥–µ–ª–∞—Ç—å –∞—Ä–µ–Ω–¥—É –ø—Ä–æ—Å—Ç–æ–π –∏ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ.\n' +
    '–ù–µ –Ω—É–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å –¥–æ—Ä–æ–≥–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Ä–∞–¥–∏ –æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã ‚Äî –∞—Ä–µ–Ω–¥—É–π—Ç–µ —É –Ω–∞—Å –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ.\n\n' +
    'üìç –ì–æ—Ä–æ–¥: –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫\n' +
    'üïí –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 20:00\n' +
    'üìû –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ ‚Äî –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏.',
    Markup.inlineKeyboard([
      [Markup.button.callback('üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', 'go_contact')],
      [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
    ])
  )
);

bot.action('go_contact', async (ctx) => {
  await ctx.reply(
    'üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +7 929 569-69-90\n' +
    'üìç <b>–ê–¥—Ä–µ—Å:</b> –≥. –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫, –ì–∞—Ä–∞–∂–Ω—ã–π –±–æ–∫—Å\n' +
    'üåç <b>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</b> 53.100704, 49.966212\n' +
    'üïò 9:00‚Äì21:00\n' +
    'üíµ –û–ø–ª–∞—Ç–∞: –Ω–∞–ª–∏—á–Ω—ã–µ / –ø–µ—Ä–µ–≤–æ–¥',
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('üìç –ì–¥–µ –∑–∞–±—Ä–∞—Ç—å?', 'where_pickup')],
        [Markup.button.url('2–ì–ò–°', 'https://2gis.ru/novokujbyshevsk/firm/70000001103003351/49.966319%2C53.100478?m=49.96506%2C53.100221%2F18.65')],
        [Markup.button.url('–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã', 'https://yandex.ru/maps/?ll=49.966212%2C53.100704&z=17')],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'menu')],
      ])
    }
  );
  await ctx.answerCbQuery();
});

// --- days calc ---
function calcDays(start, end) {
  const [ds, ms, ys] = start.split('.').map(Number);
  const [de, me, ye] = end.split('.').map(Number);
  const d1 = new Date(ys, ms - 1, ds);
  const d2 = new Date(ye, me - 1, de);
  return Math.round((d2 - d1) / (1000 * 60 * 60 * 24));
}

// --- –ó–∞–ø—É—Å–∫ ---
bot.launch();
console.log('Bot started!');

process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
