require('dotenv').config();
const { Telegraf, Markup, session } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);
const ownerId = process.env.OWNER_ID;
bot.use(session());

// üß∞ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
const tools = [
  {
    id: 'perforator',
    name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä Makita –†–ö2470',
    price: 1400,
    deposit: 5000,
    description: '–ú–æ—â–Ω—ã–π –ø–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –±—É—Ä–µ–Ω–∏—è –±–µ—Ç–æ–Ω–∞ –∏ –∫–∏—Ä–ø–∏—á–∞.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/molotok-original1.jpg'
  },
  {
    id: 'vibro',
    name: '–í–∏–±—Ä–æ–ø–ª–∏—Ç–∞ Champion PC9045F',
    price: 1800,
    deposit: 5000,
    description: '–î–ª—è —É–ø–ª–æ—Ç–Ω–µ–Ω–∏—è –≥—Ä—É–Ω—Ç–∞, –ø–ª–∏—Ç–∫–∏, —â–µ–±–Ω—è.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/vibroplate-original1.jpg'
  },
  {
    id: 'mixer',
    name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∏–∫—Å–µ—Ä –†–µ—Å–∞–Ω—Ç–∞ –°–ú-1600–≠-2',
    price: 850,
    deposit: 3000,
    description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–º–µ—Å–∞ —Å–º–µ—Å–µ–π. –£–¥–æ–±–Ω–∞—è –¥–≤—É—Ö—Å–∫–æ—Ä–æ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/mikser-original1.jpg'
  },
  {
    id: 'auger',
    name: '–ú–æ—Ç–æ–±—É—Ä Huter GGD-300 —Å –∫–æ–º–ø–ª–µ–∫—Ç–æ–º',
    price: 1300,
    deposit: 5000,
    description: '–° —à–Ω–µ–∫–∞–º–∏ (100‚Äì250 –º–º), —É–¥–ª–∏–Ω–∏—Ç–µ–ª—å 1000 –º–º. –î–ª—è –±—É—Ä–µ–Ω–∏—è –∏ –∑–∞–±–æ—Ä–æ–≤.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/motobur1.jpg'
  },
  {
    id: 'trimmer',
    name: '–ú–æ—Ç–æ–∫–æ—Å–∞ Champion',
    price: 1300,
    deposit: 3000,
    description: '–ë–µ–Ω–∑–∏–Ω–æ–≤—ã–π —Ç—Ä–∏–º–º–µ—Ä –¥–ª—è –ø–æ–∫–æ—Å–∞ —Ç—Ä–∞–≤—ã –∏ –∫—É—Å—Ç–∞—Ä–Ω–∏–∫–æ–≤.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/motokosa1.jpg'
  }
];

const userStates = new Map();

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenu = Markup.keyboard([
  ['üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤'],
  ['üì¶ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏'],
  ['üí¨ –û—Ç–∑—ã–≤—ã', '‚öôÔ∏è –û –Ω–∞—Å']
]).resize();

bot.start(async (ctx) => {
  await ctx.replyWithPhoto(
    'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/logo.png',
    {
      caption: `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ü–†–û–ö–ê–¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ 63*!\n\nüìç *–ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫*\nüïò 9:00‚Äì21:00\nüíµ –ù–∞–ª–∏—á–Ω—ã–µ / –ø–µ—Ä–µ–≤–æ–¥\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ /menu –¥–ª—è –Ω–∞—á–∞–ª–∞`,
      parse_mode: 'Markdown',
      ...mainMenu
    }
  );
});

bot.command('menu', (ctx) => ctx.reply('üì≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu));

// üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
bot.hears('üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', async (ctx) => {
  const buttons = tools.map(tool => [Markup.button.callback(`${tool.name} ‚Äî ${tool.price}‚ÇΩ`, tool.id)]);
  await ctx.reply('üîß –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞—Ä–µ–Ω–¥—ã:', Markup.inlineKeyboard(buttons));
});

// –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ
tools.forEach(tool => {
  bot.action(tool.id, async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.replyWithPhoto(tool.photo, {
      caption: `üõ† *${tool.name}*\n\n${tool.description}\n\nüí∞ *–¶–µ–Ω–∞:* ${tool.price} ‚ÇΩ/—Å—É—Ç–∫–∏\nüîê *–ó–∞–ª–æ–≥:* ${tool.deposit} ‚ÇΩ`,
      parse_mode: 'Markdown',
      reply_markup: Markup.inlineKeyboard([
        [Markup.button.callback('üëâ –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', `rent_${tool.id}`)],
        [Markup.button.callback('üè† –ú–µ–Ω—é', 'back_to_menu')]
      ])
    });
  });

  // –ù–∞—á–∞—Ç—å –∞—Ä–µ–Ω–¥—É
  bot.action(`rent_${tool.id}`, async (ctx) => {
    await ctx.answerCbQuery();
    userStates.set(ctx.chat.id, { step: 'name', tool });
    await ctx.reply('üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:', Markup.keyboard([['üè† –ú–µ–Ω—é']]).resize());
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–æ–≤ —Ñ–æ—Ä–º—ã
bot.on('text', async (ctx) => {
  const state = userStates.get(ctx.chat.id);
  const text = ctx.message.text.trim();

  if (!state || text === 'üè† –ú–µ–Ω—é') {
    userStates.delete(ctx.chat.id);
    return ctx.reply('üì≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
  }

  switch (state.step) {
    case 'name':
      state.name = text;
      state.step = 'phone';
      await ctx.reply('üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):');
      break;
    case 'phone':
      if (!/^\d{7,15}$/.test(text)) {
        return ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):');
      }
      state.phone = text;
      state.step = 'startDate';
      await ctx.reply('üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã (–î–î.–ú–ú.–ì–ì–ì–ì):');
      break;
    case 'startDate':
      if (!/^\d{2}\.\d{2}\.\d{4}$/.test(text)) {
        return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:');
      }
      state.startDate = text;
      state.step = 'endDate';
      await ctx.reply('üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—Ä–µ–Ω–¥—ã (–î–î.–ú–ú.–ì–ì–ì–ì):');
      break;
    case 'endDate':
      if (!/^\d{2}\.\d{2}\.\d{4}$/.test(text)) {
        return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:');
      }
      state.endDate = text;
      state.step = 'confirm';
      await ctx.reply(
        `üìù –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫—É:\n\nüîß *${state.tool.name}*\nüë§ ${state.name}\nüìû ${state.phone}\nüìÖ –° ${state.startDate} –ø–æ ${state.endDate}`,
        {
          parse_mode: 'Markdown',
          ...Markup.inlineKeyboard([
            [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'confirm')],
            [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')]
          ])
        }
      );
      break;
  }
});

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
bot.action('confirm', async (ctx) => {
  const state = userStates.get(ctx.chat.id);
  if (!state) return;

  const message = `üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\nüîß ${state.tool.name}\nüë§ ${state.name}\nüìû ${state.phone}\nüìÖ ${state.startDate} ‚Äî ${state.endDate}`;
  await ctx.telegram.sendMessage(ownerId, message);
  await ctx.editMessageText('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –û—Ç–ª–∏—á–Ω–æ–≥–æ –≤–∞–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è! üåû');
  userStates.delete(ctx.chat.id);
});

// –û—Ç–º–µ–Ω–∞
bot.action('cancel', async (ctx) => {
  userStates.delete(ctx.chat.id);
  await ctx.editMessageText('‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ ‚Äî –Ω–∞–∂–º–∏—Ç–µ /menu');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é
bot.action('back_to_menu', async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.reply('üì≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
});

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
bot.hears('üì¶ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', (ctx) =>
  ctx.reply('1. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç\n2. –ù–∞–∂–º–∏—Ç–µ "–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å"\n3. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –¥–∞—Ç—ã\n4. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫—É'));

bot.hears('üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', (ctx) =>
  ctx.reply('üì≤ Telegram: @ProkatinstrumentaNSK\nüìç –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫\nüïò —Å 9:00 –¥–æ 21:00'));

bot.hears('üí¨ –û—Ç–∑—ã–≤—ã', (ctx) =>
  ctx.reply('‚≠êÔ∏è –°–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤!'));

bot.hears('‚öôÔ∏è –û –Ω–∞—Å', (ctx) =>
  ctx.reply('üîß –ü—Ä–æ–∫–∞—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤ –ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫–µ ‚Äî –±—ã—Å—Ç—Ä–æ, –ø—Ä–æ—Å—Ç–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ.'));

bot.launch();
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
