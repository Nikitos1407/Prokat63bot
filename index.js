require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);
const ownerId = process.env.OWNER_ID;

const tools = [
  {
    id: 'perforator',
    name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä Makita –†–ö2470',
    price: 1400,
    deposit: 5000,
    description: '–ú–æ—â–Ω—ã–π –∏ –Ω–∞–¥—ë–∂–Ω—ã–π –ø–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –±—É—Ä–µ–Ω–∏—è –±–µ—Ç–æ–Ω–∞, –∫–∏—Ä–ø–∏—á–∞ –∏ –ø—Ä–æ—á–∏—Ö —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/molotok-original1.jpg'
  },
  {
    id: 'vibro',
    name: '–í–∏–±—Ä–æ–ø–ª–∏—Ç–∞ Champion PC9045F',
    price: 1800,
    deposit: 5000,
    description: '–ë–µ–Ω–∑–∏–Ω–æ–≤–∞—è –≤–∏–±—Ä–æ–ø–ª–∏—Ç–∞ 4.8 –∫–í—Ç –¥–ª—è —É–ø–ª–æ—Ç–Ω–µ–Ω–∏—è –≥—Ä—É–Ω—Ç–∞, —Ç—Ä–æ—Ç—É–∞—Ä–Ω–æ–π –ø–ª–∏—Ç–∫–∏, —â–µ–±–Ω—è.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/vibroplate-original1.jpg'
  },
  {
    id: 'mixer',
    name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∏–∫—Å–µ—Ä –†–µ—Å–∞–Ω—Ç–∞ –°–ú-1600–≠-2',
    price: 850,
    deposit: 3000,
    description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–º–µ—Å–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–º–µ—Å–µ–π. –£–¥–æ–±–Ω–∞—è –¥–≤—É—Ö—Å–∫–æ—Ä–æ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/mikser-original1.jpg'
  },
  {
    id: 'auger',
    name: '–ú–æ—Ç–æ–±—É—Ä Huter GGD-300 —Å –∫–æ–º–ø–ª–µ–∫—Ç–æ–º',
    price: 1300,
    deposit: 5000,
    description: '–° —à–Ω–µ–∫–∞–º–∏ (100‚Äì250 –º–º), —É–¥–ª–∏–Ω–∏—Ç–µ–ª—å 1000 –º–º. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–±–æ—Ä–æ–≤, –±—É—Ä–µ–Ω–∏—è –ª—É–Ω–æ–∫ –∏ —Å–≤–∞–π. –ö–æ–º–ø–ª–µ–∫—Ç: –ú–æ—Ç–æ–±—É—Ä - 1—à—Ç,–®–Ω–µ–∫ –Ω–∞ –≤—ã–±–æ—Ä - 1—à—Ç, –£–¥–ª–∏–Ω–∏—Ç–µ–ª—å - 1—à—Ç',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/motobur1.jpg'
  },
  {
    id: 'trimmer',
    name: '–ú–æ—Ç–æ–∫–æ—Å–∞ Champion',
    price: 1300,
    deposit: 3000,
    description: '–ë–µ–Ω–∑–∏–Ω–æ–≤—ã–π —Ç—Ä–∏–º–º–µ—Ä –¥–ª—è –ø–æ–∫–æ—Å–∞ —Ç—Ä–∞–≤—ã, –∫—É—Å—Ç–∞—Ä–Ω–∏–∫–æ–≤ –∏ —É—á–∞—Å—Ç–∫–æ–≤ —Å—Ä–µ–¥–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.',
    photo: 'https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/motokosa1.jpg'
  }
];

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  const welcomeText = `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ü–†–û–ö–ê–¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ 63*!\n
üìç *–ì–∞—Ä–∞–∂–Ω—ã–π –±–æ–∫—Å (–ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫)*
üïò –†–∞–±–æ—Ç–∞–µ–º —Å 9:00 –¥–æ 21:00
üíµ –û–ø–ª–∞—Ç–∞: –Ω–∞–ª–∏—á–Ω—ã–µ / –ø–µ—Ä–µ–≤–æ–¥

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞—Ä–µ–Ω–¥—ã:`;

  const buttons = tools.map(tool => [
    Markup.button.callback(`${tool.name} ‚Äî ${tool.price}‚ÇΩ`, tool.id)
  ]);

  // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
  await ctx.sendPhoto('https://raw.githubusercontent.com/Nikitos1407/Prokat63bot/main/images/logo.png');

  // –ü–æ—Ç–æ–º —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
  await ctx.reply(welcomeText, {
    parse_mode: 'Markdown',
    reply_markup: {
      inline_keyboard: buttons
    }
  });
});

// –ö–Ω–æ–ø–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É
tools.forEach(tool => {
  bot.action(tool.id, async (ctx) => {
    await ctx.answerCbQuery(); // –£–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
    await ctx.sendPhoto(tool.photo, {
      caption: `üõ† *${tool.name}*\n\n${tool.description}\n\nüí∞ *–¶–µ–Ω–∞:* ${tool.price} ‚ÇΩ / —Å—É—Ç–∫–∏\nüîê *–ó–∞–ª–æ–≥:* ${tool.deposit} ‚ÇΩ`,
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [Markup.button.callback('üëâ –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å', `rent_${tool.id}`)]
        ]
      }
    });
  });

  bot.action(`rent_${tool.id}`, async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.reply(`üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

–ò–º—è:
–¢–µ–ª–µ—Ñ–æ–Ω:
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${tool.name}
–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):`);
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  if (ctx.message.text.toLowerCase().includes('—Ç–µ–ª–µ—Ñ–æ–Ω')) {
    await ctx.telegram.sendMessage(ownerId, `üì• –ó–∞—è–≤–∫–∞:\n\n${ctx.message.text}`);
    await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');
  }
});

bot.launch();
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
